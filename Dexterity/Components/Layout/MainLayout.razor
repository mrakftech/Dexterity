@using MudBlazor.Extensions.Helper
@inherits LayoutComponentBase
<style>
    body {
        font-family: "Open Sans", serif;
        background-color: #debdde;
        background-image: linear-gradient(338deg, #debdde 0%, #a9dfe6 100%) !important;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: center;
        background-size: cover;
    }
</style>
<link href="@_sfTheme" rel="stylesheet"/>
<link  href="_content/Radzen.Blazor/css/default-base.css" rel="stylesheet">
<link rel="stylesheet" href="assets/css/syncfusion/custom-sf.css"/>

<MudLayout>
    <MudAppBar Elevation="1" Dense="false">
        <MudImage Src="favicon.png" Fluid="true" Width="32" Class="mr-3" Style="margin-left: -16px;"
                  ObjectPosition="ObjectPosition.Center">
        </MudImage>
        <MudIconButton Icon="@MudIcons.Material.Filled.Menu" Color="MudColor.Inherit" Edge="Edge.Start"
                       OnClick="@ToggleDrawer"/>
        <MudSpacer/>
        <UserPersonalToolBar/>
        <MudToggleIconButton
            Icon="@MudIcons.Material.Filled.DarkMode" Color="MudColor.Info"
            ToggledIcon="@MudIcons.Material.Filled.WbSunny" ToggledColor="MudColor.Info" ToggledChanged="ThemeChange"/>
    </MudAppBar>
    <MudDrawer Style="color: white!important; background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%) !important;" @bind-Open="@_open" ClipMode="DrawerClipMode.Docked" Breakpoint="@MudBreakpoint.Sm" Elevation="1"
               Width="200px" Variant="@DrawerVariant.Mini" Class="bg-side-nav">
        <NavMenu/>
        <MudSpacer/>
        <MudNavMenu Style="margin-bottom: 75px">
            <MudNavLink Match="NavLinkMatch.All" Href="/user-manager" Icon="fas fa-users-medical"
                        IconColor="MudColor.Info">
                User Manager
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon=" fas fa-right-from-bracket" IconColor="MudColor.Info"
                        OnClick="Logout">
                Log out
            </MudNavLink>

        </MudNavMenu>
    </MudDrawer>
    <MudMainContent Class="">
        <MudContainer Class="mt-2" MaxWidth="MaxWidth.ExtraExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>

</MudLayout>

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_currentTheme"/>
<MudPopoverProvider/>
<MudDialogProvider BackdropClick="false"/>
<MudSnackbarProvider/>
<RadzenComponents/>
@code {
    private readonly MudTheme _currentTheme = DexterityTheme.DefaultTheme;
    private bool _open = false;
    private bool _isDarkMode;
    private string _sfTheme = "_content/Syncfusion.Blazor.Themes/bootstrap.css";

    protected override async Task OnInitializedAsync()
    {

        await CheckPasswordReset();
    }

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private void Logout(MouseEventArgs obj)
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task CheckPasswordReset()
    {
        if (ApplicationState.CurrentUser.IsForceReset &&
            ApplicationState.CurrentUser.RoleName != RoleConstants.AdministratorRole)
        {
            var parameters = new DialogParameters();
            var options = new DialogOptions() {CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true, Position = DialogPosition.Center};
            await DialogService.ShowAsync<PasswordResetModal>("", parameters, options);
        }
    }

    private void ThemeChange(bool obj)
    {
        if (obj)
        {
            _isDarkMode = obj;
            _sfTheme = "_content/Syncfusion.Blazor.Themes/bootstrap-dark.css";
        }
        else
        {
            _isDarkMode = obj;
            _sfTheme = "_content/Syncfusion.Blazor.Themes/bootstrap.css";
        }
    }

}