@layout MainLayout
@page "/appointments"
@using Dexterity.Components.Pages.Appointments.Components
@using Dexterity.Components.Pages.Appointments.Dialogs
@using Width = Blazorise.Width
<TopTitleBar Title="Appointments"
             Image="modules/appointment.svg">
</TopTitleBar>
<style>
    .tab-content{
        width: 75%!important;
    }
</style>
<div class="vertical-space">
    
    <MudPaper Height="800px" Style="overflow:hidden; position:relative;">
        <MudDrawerContainer Class="mud-height-full">
            <MudDrawer Class="sub-drawer" Style="" @bind-Open="@_open" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini"
                       OpenMiniOnHover="true">
                <MudNavMenu>
                    <MudItem>
                        <MudNavLink Match="NavLinkMatch.All" Icon="fas fa-calendar-range" IconColor="MudColor.Info"
                                    @onclick="@(() => ClickChanged("appointments"))">
                            Appointments
                        </MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Icon="fas fa-calendar-circle-plus" IconColor="MudColor.Info"
                                    @onclick="@(() => NewAppointment(DateTime.Now))">
                            New Appointment
                        </MudNavLink>
                    </MudItem>
                    <MudSpacer/>
                
                </MudNavMenu>
            </MudDrawer>
            <div class="d-flex justify-center align-center">
                <Tabs SelectedTab="@_selectedTab"  Width="Width.Is100">
                    <Content>
                        <TabPanel Name="appointments">
                            <AppointmentList/>
                        </TabPanel>
                        <TabPanel Name="new-appointments">
                        </TabPanel>
    
                    </Content>
                </Tabs>
            </div>
        </MudDrawerContainer>
    </MudPaper>
</div>

@code {
    private bool _open = false;
    string _selectedTab = "appointments";

    private void ClickChanged(string tabName)
    {
        _selectedTab = tabName;
    }
    private async Task NewAppointment(DateTime dateTime)
    {

        var parameters = new DialogParameters();
        parameters.Add("StartDate", dateTime);
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true, Position = DialogPosition.Center };
        var dialogResult = await DialogService.ShowAsync<UpsertAppointmentModal>("", parameters, options);
        var result = await dialogResult.Result;
        if (!result.Canceled)
        {
        }

    }
}