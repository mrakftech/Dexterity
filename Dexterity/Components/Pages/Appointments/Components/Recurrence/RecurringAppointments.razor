@using Services.Features.PatientManagement.Dtos
@using Services.Features.PatientManagement.Dtos.Details
@using Services.Features.UserAccounts.Dtos.User


<MudPaper Height="700px" Style="overflow:auto; position:relative;margin-top: 1%">
    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer Style="background-color: #319ae1;background-image: linear-gradient(135deg, #319ae1 0%, #bdbdd4 100%);;!important; color: #ffffff !important;;" @bind-Open="@_open" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
            <MudNavMenu>
                <MudNavLink Match="NavLinkMatch.All" Icon="fas fa-calendar-plus" IconColor="MudColor.Info" @onclick="@(() => ClickChanged("add-recurrence"))">Add</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <div class="d-flex justify-center align-center">
            <Tabs SelectedTab="@_selectedTab" Style="width: 100%;margin-top: 3%">
                <Content>
                    <TabPanel Name="add-recurrence">
                        <AddRecurrence HealthCares="HealthCares" PatientList="PatientList"/>
                    </TabPanel>

                </Content>
            </Tabs>
        </div>
    </MudDrawerContainer>
</MudPaper>

@code{
    [Parameter] public List<HealthcareDto> HealthCares { get; set; } = [];
    [Parameter] public List<PatientListDto> PatientList { get; set; } = [];
    string _selectedTab = "add-recurrence";
    private bool _open = false;
    private void ClickChanged(string tabName)
    {
        _selectedTab = tabName;
    }

}