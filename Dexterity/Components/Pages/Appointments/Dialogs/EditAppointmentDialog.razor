@using Services.Features.Appointments.Dtos
@using Services.Features.PatientManagement.Dtos.Details
@using Services.Features.Settings.Dtos
@using Services.Features.UserAccounts.Dtos.User
@if (!_initialLoad)
{
    <DexDialog>
        <DialogTitle>Edit Appointment</DialogTitle>
        <Content>
            <DexForm Model="@Appointment" OnValidSubmit="SaveAppointment" ColumnCount="2">
                <Fields>
                    <FormItem Field="@nameof(AppointmentDto.PatientId)" ColumnSpan="2">
                        <Template>
                            <PatientAutoComplete PatientList="PatientList" OnChangePatient="ChangePatient"
                                                 SelectedPatientName="@SelectedPatientName"></PatientAutoComplete>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.StartTime)" ColumnSpan="2">
                        <Template>
                            <label class="e-form-label">Start Time:</label>
                            <SfDateTimePicker Min="@DateTime.Today" TValue="DateTime" @bind-Value="@Appointment.StartTime">
                                <DateTimePickerEvents TValue="DateTime">
                                </DateTimePickerEvents>
                            </SfDateTimePicker>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.AppointmentTypeId)" ColumnSpan="1">
                        <Template>
                            <label class="e-form-label">Appointment Type:</label>
                            <SfDropDownList TValue="int" TItem="AppointmentTypeDto" Placeholder="Select type"
                                            DataSource="@AppointmentTypes" @bind-Value="@Appointment.AppointmentTypeId">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.ClinicSiteId)" ColumnSpan="1">
                        <Template>
                            <label class="e-form-label">Site Or Room:</label>
                            <SfDropDownList TValue="Guid" TItem="ClinicSiteDto" Placeholder="Select Site"
                                            DataSource="@ClinicSites" @bind-Value="@Appointment.ClinicSiteId">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.HcpId)" ColumnSpan="1">
                        <Template>
                            <label class="e-form-label">HCP:</label>
                            <SfDropDownList TValue="Guid" TItem="HealthcareDto" Placeholder="Select Hcp"
                                            DataSource="@HealthCares" @bind-Value="@Appointment.HcpId">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.Duration)" ColumnSpan="1">
                        <Template>
                            <label class="e-form-label">Duration:</label>
                            <SfNumericTextBox TValue="int"  Min="5" Step="5" @bind-Value="@Appointment.Duration"
                                              Max="60"></SfNumericTextBox>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(AppointmentDto.Description)" ColumnSpan="2">
                        <Template>
                            <label class="e-form-label">Description:</label>
                            <SfTextBox @bind-Value="@Appointment.Description" Multiline></SfTextBox>
                        </Template>
                    </FormItem>
                </Fields>
                <Buttons>
                    <DexLoadingButton Name="Save Appointment" Type="MudButtonType.Submit" Processing="_processing"
                                      Icon="fas fa-floppy-disk"></DexLoadingButton>
                </Buttons>
            </DexForm>
        </Content>
    </DexDialog>
}
else
{
    <p class="m-3">Processing....</p>
}

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }
    List<HealthcareDto> HealthCares { get; set; } = new();
    List<PatientListDto> PatientList { get; set; } = new();
    List<AppointmentTypeDto> AppointmentTypes { get; set; } = new();
    List<ClinicSiteDto> ClinicSites { get; set; } = new();
    bool _initialLoad;
    bool _processing;
    AppointmentDto Appointment { get; set; } = new();
    string SelectedPatientName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _initialLoad = true;
        await GetHealthCares();
        await GetPatients();
        await GetAppointmentTypes();
        await GetClinicSites();
        var res = await UnitOfWork.Appointment.GetAppointment(Id);
        if (res.Succeeded)
        {
            Appointment = Mapper.Map<AppointmentDto>(res.Data);
            SelectedPatientName = Appointment.PatientName;
        }

        _initialLoad = false;
    }

    private async Task GetHealthCares()
    {
        HealthCares = await UnitOfWork.User
            .GetUsersByClinic(ApplicationState.Auth.CurrentUser.ClinicId);
    }

    private async Task GetPatients()
    {
        PatientList = await UnitOfWork.Patient.GetPatients();
    }

    private async Task GetAppointmentTypes()
    {
        AppointmentTypes = await UnitOfWork.Setting.GetAppointmentTypes();
    }

    private async Task GetClinicSites()
    {
        ClinicSites = await UnitOfWork.Setting.GetSitesByClinic(ApplicationState.Auth.CurrentUser.ClinicId);
    }

    private void ChangePatient(ChangeEventArgs<string, PatientListDto> args)
    {
        var patient = args.ItemData;
        if (patient != null)
        {
            Appointment.PatientId = patient.Id;
            SelectedPatientName = patient.FullName;
            StateHasChanged();
        }
        else
        {
            Appointment.PatientId = Guid.Empty;
        }
    }

    private async Task SaveAppointment()
    {
        _processing = true;
        Appointment.Location = ClinicSites.FirstOrDefault(x => x.Id == Appointment.ClinicSiteId)!.Name;
        Appointment.Type = AppointmentTypes.FirstOrDefault(x => x.Id == Appointment.AppointmentTypeId)!.Name;
        await Task.Delay(2500);
        var res = await UnitOfWork.Appointment.SaveAppointment(Id, Appointment);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage(res.Messages.First());
            MudDialog.Close();
        }
        else
        {
            Snackbar.FailMessage(res.Messages.First());
        }

        _processing = false;
    }

}