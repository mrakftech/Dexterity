@using Services.Features.UserAccounts.Dtos.User
<MudStack Style="margin-top:5%">
    <MudItem md="12">
        <MudItem md="3">
            <Label>Start Hour</Label>
        </MudItem>
        <MudItem md="3">
            <TimeEdit TValue="TimeSpan" @bind-Time="@UserDto.StartHour" />
        </MudItem>
        <MudItem md="3">
            <Label>End Hour</Label>
        </MudItem>
        <MudItem md="3">
            <TimeEdit TValue="TimeSpan" @bind-Time="@UserDto.EndHour" />
        </MudItem>
    </MudItem>
    <MudItem>
        <MudStack>
            <Label>Working Days</Label>
            <SfMultiSelect TValue="List<int>" TItem="WeekDay" Placeholder="Working Days" DataSource="@WeekDays" @bind-Value="@UserDto.WorkingDays">
                <MultiSelectFieldSettings Text="Name" Value="Id"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </MudStack>
    </MudItem>
</MudStack>

@code {
    [Parameter] public CreateUserDto UserDto { get; set; } = new();
    private List<WeekDay> WeekDays { get; set; } = new List<WeekDay>();
    protected override Task OnInitializedAsync()
    {

        @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
        {
            WeekDays.Add(new WeekDay()
                {
                    Id = Convert.ToInt32(day),
                    Name = @day.ToString()
                });
        }
        return Task.CompletedTask;
    }



    public class WeekDay
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}