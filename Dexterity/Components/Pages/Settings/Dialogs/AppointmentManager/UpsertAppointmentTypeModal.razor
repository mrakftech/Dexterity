@using Services.Features.Settings.Dtos
@using Domain.Entities.Appointments
<MudDialog>
    <DialogContent>
        <Validations @ref="validations" Mode="ValidationMode.Manual">
            <EditForm Model="AppointmentTypeDto" OnValidSubmit="SaveAppointmentType">
                <MudStack Class="mt-2">
                    <DexTextInputField Label="Name" @bind-FieldDataSource="@AppointmentTypeDto.Name"></DexTextInputField>
                    <Field>
                        <FieldLabel ColumnSize="ColumnSize.Is2">Duration</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <NumericEdit Label="Duration" TValue="int" @bind-Value="@AppointmentTypeDto.Duration" Min="15" Step="5" />
                        </FieldBody>
                    </Field>
                    <MudButton StartIcon="fas fa-floppy-disk" Disabled="@_processing" ButtonType="MudButtonType.Submit" Variant="Variant.Filled" Color="MudColor.Primary" FullWidth="true">
                        @if (_processing)
                        {
                            <MudProgressCircular Class="ms-n1" Size="MudSize.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Processing</MudText>
                        }
                        else
                        {
                            <MudText>Save</MudText>
                        }
                    </MudButton>
                </MudStack>
            </EditForm>
        </Validations>

    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }
    private AppointmentTypeDto AppointmentTypeDto { get; set; } = new();
    private bool _processing;
    Validations validations;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            var s = await UnitOfWork.Setting.GetAppointmentType(Id);
            AppointmentTypeDto = s.Data;
        }
    }
    private async Task SaveAppointmentType()
    {
        _processing = true;
        if (await validations.ValidateAll())
        {
            var res = await UnitOfWork.Setting.SaveAppointmentType(Id,AppointmentTypeDto);
            if (res.Succeeded)
            {
                Snackbar.SuccessMessge(res.Messages.First());
                MudDialog.Close();
            }
            else
            {
                Snackbar.FailMessge(res.Messages.First());
            }
        }

        await Task.Delay(1000);
        _processing = false;
    }
}
