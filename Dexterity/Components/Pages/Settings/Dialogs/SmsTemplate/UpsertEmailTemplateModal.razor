@using Domain.Entities.Settings.Templates
<MudDialog>
    <DialogContent>
        <Validations @ref="validations" Mode="ValidationMode.Manual">
            <EditForm Model="EmailTemplateRequest" OnValidSubmit="SaveSmsTemplate">
                <MudStack Class="mt-2">
                    <DexTextInputField Label="Template" @bind-FieldDataSource="@EmailTemplateRequest.Name"></DexTextInputField>
                    <MudItem>
                        <FieldLabel>Content</FieldLabel>
                        <MemoEdit Rows="5" ReplaceTab TabSize="4" @bind-Text="@EmailTemplateRequest.Content"/>
                    </MudItem>
                    <MudButton Disabled="@_processing" ButtonType="MudButtonType.Submit" Variant="Variant.Filled" Color="MudColor.Primary" FullWidth="true">
                        @if (_processing)
                        {
                            <MudProgressCircular Class="ms-n1" Size="MudSize.Small" Indeterminate="true"/>
                            <MudText Class="ms-2">Processing</MudText>
                        }
                        else
                        {
                            <MudText>Save Template</MudText>
                        }
                    </MudButton>
                </MudStack>
            </EditForm>
        </Validations>

    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public Guid Id { get; set; }
    private EmailTemplate EmailTemplateRequest { get; set; } = new();
    private bool _processing;
    Validations validations;

    protected override async Task OnInitializedAsync()
    {
        if (Id != Guid.Empty)
        {
            var s = await UnitOfWork.Setting.GetEmailTemplate(Id);
            EmailTemplateRequest = s.Data;
        }
    }

    private async Task SaveSmsTemplate()
    {
        _processing = true;
        if (await validations.ValidateAll())
        {
            var res = await UnitOfWork.Setting.SaveEmailTemplate(Id, EmailTemplateRequest);
            if (res.Succeeded)
            {
                Snackbar.SuccessMessge(res.Messages.First());
                MudDialog.Close();
            }
            else
            {
                Snackbar.FailMessge(res.Messages.First());
            }
        }

        await Task.Delay(1000);
        _processing = false;
    }

}