@using Domain.Entities.Settings.Templates
<MudDialog>
    <DialogContent>
        <DexForm Model="SmsTemplateRequest" OnValidSubmit="SaveSmsTemplate">
            <Fields>
                <FormItem Field="@nameof(SmsTemplate.Name)" LabelText="Template Name" > </FormItem>
                <FormItem Field="@nameof(SmsTemplate.Content)" LabelText="Content" EditorType="FormEditorType.TextArea"> </FormItem>
            </Fields>
            <Buttons>
                <DexLoadingButton Name="Save" Type="MudButtonType.Submit" Processing="@_processing" Icon="fas fa-floppy-disk"></DexLoadingButton>
            </Buttons>
        </DexForm>
    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public Guid Id { get; set; }
    private SmsTemplate SmsTemplateRequest { get; set; } = new();
    private bool _processing;

    protected override async Task OnInitializedAsync()
    {
        if (Id != Guid.Empty)
        {
            var s = await UnitOfWork.Setting.GetSmsTemplate(Id);
            SmsTemplateRequest = s.Data;
        }
    }

    private async Task SaveSmsTemplate()
    {
        _processing = true;
        var res = await UnitOfWork.Setting.SaveSmsTemplate(Id, SmsTemplateRequest);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage(res.Messages.First());
            MudDialog.Close();
        }
        else
        {
            Snackbar.FailMessge(res.Messages.First());
        }

        await Task.Delay(1000);
        _processing = false;
    }

}