@using Services.Features.PatientManagement.Dtos.Family
<DexDialog>
    <DialogTitle></DialogTitle>
    <Content>
        <DexForm Model="FamilyMember" OnValidSubmit="SaveNextOfKin">
            <Fields>
                <FormItem Field="@nameof(FamilyMemberDto.FamilyName)" LabelText="Family Name"/>
                <FormItem Field="@nameof(FamilyMemberDto.FirstName)" LabelText="First Name"/>
                <FormItem Field="@nameof(FamilyMemberDto.Title)" LabelText="Title"/>
                <FormItem Field="@nameof(FamilyMemberDto.Gender)"/>
                <FormItem Field="@nameof(FamilyMemberDto.ContactDetail)" LabelText="Contact Detail"/>
                <FormItem Field="@nameof(FamilyMemberDto.Address)" EditorType="FormEditorType.TextArea"/>
                <FormItem Field="@nameof(FamilyMemberDto.RelationshipToPatient)" LabelText="Relationship To Patient">
                    <Template>
                        <SfDropDownList TValue="string" Placeholder="e.g. Spouse Or Uncle" TItem="Relationship" @bind-Value="@FamilyMember.RelationshipToPatient" DataSource="@PatientConstants.RelationshipList">
                            <DropDownListFieldSettings Value="Name"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </Template>
                </FormItem>
            </Fields>
            <Buttons>
                <DexLoadingButton Name="Save" Processing="_processing" Type="MudButtonType.Submit"/>
            </Buttons>
        </DexForm>
    </Content>
</DexDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }
    [Parameter] public string ActionName { get; set; }
    private FamilyMemberDto FamilyMember { get; set; } = new();
    private bool _processing;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            FamilyMember = await UnitOfWork.Patient.GetFamilyMember(Id);
        }
    }

    private async Task SaveNextOfKin()
    {
        _processing = true;
        if (ActionName == "PatientCarer")
        {
            FamilyMember.IsCarer = true;
        }
        else
        {
            FamilyMember.IsCarer = false;
        }

        FamilyMember.PatientId = ApplicationState.SelectedPatient.Id;
        var res = await UnitOfWork.Patient.SaveFamilyMember(Id, FamilyMember);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage(res.Messages.First());
            MudDialog.Close();
        }
        else
        {
            Snackbar.FailMessage(res.Messages.First());
        }

        _processing = false;
    }

}