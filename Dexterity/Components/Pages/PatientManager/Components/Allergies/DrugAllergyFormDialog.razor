@using Services.Features.PatientManagement.Dtos.Allergies
<DexDialog>
    <DialogTitle>
       Drug Allergy
    </DialogTitle>
    <Content>
        <DexForm Model="Allergy" OnValidSubmit="UpsertAllergy">
            <Fields>
                <FormItem Field="@nameof(UpsertDrugAllergyDto.PatientName)" LabelText="Patient Name" IsEnabled="false"/>
                <FormItem Field="@nameof(UpsertDrugAllergyDto.Date)" EditorType="FormEditorType.DatePicker"/>
                <FormItem Field="@nameof(UpsertDrugAllergyDto.DrugAllergyName)" LabelText="Drug" />
                <FormItem Field="@nameof(UpsertDrugAllergyDto.DrugType)" LabelText="Type" />
                <FormItem Field="@nameof(UpsertDrugAllergyDto.Notes)" EditorType="FormEditorType.TextArea"/>

            </Fields>
            <Buttons>
                <DexLoadingButton Processing="_processing" Name="Save" Type="MudButtonType.Submit"/>
            </Buttons>
        </DexForm>
    </Content>
</DexDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }
    public UpsertDrugAllergyDto Allergy { get; set; } = new();
    private bool _processing;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            var allergy = await UnitOfWork.Patient.GetPatientDrugAllergy(Id);
            Allergy = Mapper.Map<UpsertDrugAllergyDto>(allergy);
        }
    }

    private async Task UpsertAllergy()
    {
        _processing = true;
        await Task.Delay(1000);
        var res = await UnitOfWork.Patient.UpsertPatientDrugAllergy(Id, Allergy);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage(res.Messages.First());
            MudDialog.Close();
        }
        else
        {
            Snackbar.FailMessge(res.Messages.First());
        }

        _processing = false;
    }


}