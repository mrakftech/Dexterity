@layout MainLayout
@page "/messaging"
@using Dexterity.Components.Pages.Messaging.Tabs
@using Domain.Entities.Common
@using Dexterity.Components.Pages.Messaging.Components
<TopTitleBar Title="Messaging"
             Image="modules/messaging/communication1.svg">
</TopTitleBar>

<div class="vertical-space">
    <InnerLayout ShowHeader="false">
        <NavigationItems>
            @if (_loading)
            {
                <DexProgressBar/>
            }
            else
            {
                foreach (var (item, index) in _appNavigations.Select((item, index) => (item, index)))
                {
                    <DexMenuItem Text="@item.Name" Icon="@item.Icon"
                                 Click="@(() => ClickChanged(item.Order, item.Id))"/>
                }
            }
            @* <DexMenuItem Text="Contacts" Icon="contact-icon" Click="@(() => ClickChanged(1))"/> *@
            @* <DexMenuItem Text="Phone Directory" Icon="telephone-icon" Click="@(() => ClickChanged(4))"/> *@
        </NavigationItems>

        <DexContentTabs>
            <MudTabs @ref="_tabs">
                <MudTabPanel Text="" Style="background-color: transparent">
                    <UserTasksTab/>
                </MudTabPanel>
                <MudTabPanel Text="">
                    <SmsTab/>
                </MudTabPanel>
                <MudTabPanel Text="">
                    <InstantMessageHistory/>
                </MudTabPanel>
            </MudTabs>
        </DexContentTabs>
    </InnerLayout>
</div>

@code {
    MudTabs _tabs;
    private List<AppModule> _appNavigations = new();
    private bool _loading;

    private void ClickChanged(int tabIndex, Guid moduleId)
    {
        ApplicationState.Auth.SelectedModuleId = moduleId;
        _tabs.ActivatePanel(tabIndex);
    }

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        await GetAppNavigations();
        _loading = false;
    }

    private async Task GetAppNavigations()
    {
        _appNavigations = await UnitOfWork.App.GetAppNavigations(ApplicationState.Auth.SelectedModuleId);
    }

}