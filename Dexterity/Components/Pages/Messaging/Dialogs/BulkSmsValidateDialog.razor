@using Domain.Entities.Settings.Templates
@using Services.Features.PatientManagement.Dtos.Details
@using Services.Features.Messaging.Dtos.Sms

<MudDialog>
    <TitleContent>
        <MudText Align="Align.Center" Style="font-weight: bolder">Bulk Sms Details</MudText>
    </TitleContent>
    <DialogContent>
        <MudItem md="12">
            <MudGrid Justify="Justify.Center">
                <MudItem md="12">
                    <MudStack Row>
                        <MudItem>
                            <MudText Style="font-weight: bolder">Created By:</MudText>
                        </MudItem>
                        <MudItem>@ApplicationState.CurrentUser.Name</MudItem>
                    </MudStack>
                </MudItem>
                <MudItem md="12">
                    <MudStack Row>
                        <MudItem>
                            <MudText Style="font-weight: bolder">Valid Mobile Numbers:</MudText>
                        </MudItem>
                        <MudItem>@SelectedPatients.Count</MudItem>
                    </MudStack>
                </MudItem>
                <MudItem md="12">
                    <MudStack Row>
                        <MudItem>
                            <MudText Style="font-weight: bolder">Selected Patients:</MudText>
                        </MudItem>
                        <MudItem>@SelectedPatients.Count</MudItem>
                    </MudStack>
                </MudItem>
                <MudItem>
                    <SfGrid DataSource="@SelectedPatients" Height="100px" AllowSelection="true" AllowPaging="true">
                        <GridColumns>
                            <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
                            <GridColumn Field="@nameof(PatientListDto.FullName)" HeaderText="Name" Width="120px"/>
                            <GridColumn Field="@nameof(PatientListDto.Gender)" HeaderText="Gender" Width="120px"/>
                            <GridColumn Field="@nameof(PatientListDto.MobilePhone)" HeaderText="Mobile" Width="120px"/>
                            <GridColumn Field="@nameof(PatientListDto.AddressLine1)" HeaderText="Address" Width="120px"/>
                        </GridColumns>
                    </SfGrid>
                </MudItem>
                <MudItem>
                    <DexForm Model="_messageDto" OnValidSubmit="SendSmsClick">
                        <Fields>
                            <FormItem Field="@nameof(SendMessageDto.Content)">
                                <Template>
                                    <label class="e-form-label">Template</label>
                                    <SfDropDownList TValue="Guid" TItem="SmsTemplate" Placeholder="Select a template" DataSource="@SmsTemplates">
                                        <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                        <DropDownListEvents TValue="Guid" TItem="SmsTemplate" ValueChange="OnValueChange"></DropDownListEvents>
                                    </SfDropDownList>
                                </Template>
                            </FormItem>
                            <FormItem Field="@nameof(BulkSmsDto.Content)" EditorType="FormEditorType.TextArea"/>
                        </Fields>
                        <Buttons>
                            <DexLoadingButton Name="Send SMS" Type="MudButtonType.Submit" Processing="_processing"/>
                        </Buttons>
                    </DexForm>

                </MudItem>
            </MudGrid>
        </MudItem>
    </DialogContent>
</MudDialog>

@code {
    [Parameter] public List<PatientListDto> SelectedPatients { get; set; } = new();
    private List<SmsTemplate> SmsTemplates { get; set; } = new();
    private BulkSmsDto _messageDto = new();
    private bool _processing;


    protected override async Task OnInitializedAsync()
    {
        await GetSmsTemplates();
    }

    private async Task GetSmsTemplates()
    {
        SmsTemplates = await UnitOfWork.Setting.GetSmsTemplates();
    }


    private async Task SendSmsClick()
    {
        _processing = true;

        await Task.Delay(1500);
        _messageDto.Patients = SelectedPatients.ToList();
        var res = await UnitOfWork.Messaging.SendBulkSms(_messageDto);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage("Message has been sent.");
        }
        else
        {
            foreach (var item in res.Messages)
            {
                Console.WriteLine(item);
            }
        }

        _processing = false;
    }

    private async Task ChangeSmsTemplate(Guid id)
    {
        if (id == Guid.Empty)
        {
            _messageDto.Content = "";
        }
        else
        {
            var res = await UnitOfWork.Setting.GetSmsTemplate(id);
            _messageDto.Content = res.Data.Content;
        }
    }

    public void OnValueChange(ChangeEventArgs<Guid, SmsTemplate> args)
    {
        _messageDto.Content = args.ItemData.Content;
    }

}