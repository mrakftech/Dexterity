@using global::Services.Features.Messaging.Dtos.Sms
@using global::Services.Features.PatientManagement.Dtos
<MudText Align="Align.Center" Typo="Typo.h4" Class="text-bold">Send Email</MudText>
<Validations @ref="@_validationsRef" Mode="ValidationMode.Manual" Model="@_mailRequest">
    <MudStack>
        <PatientAutoComplete PatientList="PatientList" OnChangePatient="ChangePatient"></PatientAutoComplete>
        <MudItem>
            <RichTextEdit @ref="richTextEditRef"
                          Theme="RichTextEditTheme.Snow"
                          ContentChanged="@OnContentChanged"
                          PlaceHolder="Type your post here..."
                          SubmitOnEnter="false">
                <Editor></Editor>
                <Toolbar>
                    <RichTextEditToolbarGroup>
                        <RichTextEditToolbarButton Action="RichTextEditAction.Bold"/>
                        <RichTextEditToolbarButton Action="RichTextEditAction.Italic"/>
                        <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                            <RichTextEditToolbarSelectItem Value="small"/>
                            <RichTextEditToolbarSelectItem Selected/>
                            <RichTextEditToolbarSelectItem Value="large"/>
                            <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                        </RichTextEditToolbarSelect>
                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered"/>
                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet"/>
                    </RichTextEditToolbarGroup>
                </Toolbar>
            </RichTextEdit>
        </MudItem>
        <MudItem>
            <DexInputField Label="Subject" @bind-FieldDataSource="_mailRequest.Subject"></DexInputField>
        </MudItem>
        <MudItem>
            <DexInputField Label="Email" @bind-FieldDataSource="_mailRequest.To" FieldRole="TextRole.Email"></DexInputField>
        </MudItem>
        <MudItem>
            <MudButton Disabled="@_processing" OnClick="SendSmsClick" Variant="Variant.Filled" Color="MudColor.Primary" StartIcon="">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1 white-color" Size="MudSize.Small" Indeterminate="true"/>
                    <MudText Class="ms-2 white-color">Processing</MudText>
                }
                else
                {
                    <MudText><i class="fas fa-paper-plane"></i> Send Mail</MudText>
                }
            </MudButton>
        </MudItem>
    </MudStack>
</Validations>


@code {
    [Parameter] public List<PatientListDto> PatientList { get; set; } = new();
    private MailRequest _mailRequest = new();
    Validations _validationsRef;
    private string _body;
    private bool _processing;
    protected RichTextEdit richTextEditRef;

    private void ChangePatient(PatientListDto obj)
    {
        if (obj.Id != Guid.Empty)
        {
            _mailRequest.To = obj.EmailAddress;
        }
    }

    private async Task SendSmsClick()
    {
        _processing = true;
        if (await _validationsRef.ValidateAll())
        {
            await Task.Delay(2500);
            await MailService.SendAsync(_mailRequest, default);
            Snackbar.SuccessMessge("Email has been sent.");
            await _validationsRef.ClearAll();
        }
        _processing = false;
    }

    private async Task OnContentChanged()
    {
        _body = await richTextEditRef.GetHtmlAsync();
        _mailRequest.Body = _body;
    }

}