@using Dexterity.Components.Pages.Messaging.Dialogs
@using Services.Features.PatientManagement.Dtos
@using Services.Features.PatientManagement.Dtos.Details
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@using Shared.Helper

<TabTitle Title="Bulk SMS"></TabTitle>
<div class="vertical-space">

    <MudItem>
        <MudStack>
            <MudItem>
                <MudStack Row>
                    <MudItem>
                        <RadzenMenu>
                            <RadzenMenuItem Text="Load Group" Icon="home">
                                <RadzenMenuItem Text="Patients">
                                    <RadzenMenuItem Text="All Patients" Click="LoadPatients"></RadzenMenuItem>
                                </RadzenMenuItem>
                            </RadzenMenuItem>
                        </RadzenMenu>
                    </MudItem>
                    @if (SelectedPatients is {Count: > 0})
                    {
                        <MudItem>
                            <MudButton Color="MudColor.Primary" Variant="Variant.Filled" OnClick="SendBulkSms">Send Bulk Sms</MudButton>
                        </MudItem>
                    }
                </MudStack>
            </MudItem>
            <MudItem>

            </MudItem>
        </MudStack>
    </MudItem>
    @if (ValidPatients is {Count: > 0})
    {
        <SfGrid @ref="_grid" DataSource="@ValidPatients" Height="300px" AllowSelection="true" AllowPaging="true">
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridEvents RowSelected="GetSelectedRecords" RowDeselected="GetDeselectedRow" TValue="PatientListDto"/>
            <GridSelectionSettings PersistSelection="true" CheckboxMode="CheckboxSelectionType.ResetOnRowClick" Type="SelectionType.Multiple"/>
            <GridColumns>
                <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
                <GridColumn Field="@nameof(PatientListDto.FullName)" HeaderText="Name" Width="120px"/>
                <GridColumn Field="@nameof(PatientListDto.Gender)" HeaderText="Gender" Width="120px"/>
                <GridColumn Field="@nameof(PatientListDto.MobilePhone)" HeaderText="Mobile" Width="120px"/>
                <GridColumn Field="@nameof(PatientListDto.AddressLine1)" HeaderText="Address" Width="120px"/>
            </GridColumns>
            <SfSpinner @bind-Visible="@_patientLoading">
            </SfSpinner>
        </SfGrid>
    }
</div>


@code {
    [Parameter] public List<PatientListDto> PatientList { get; set; } = new();
    private List<PatientListDto> ValidPatients { get; set; } = new();
    private List<PatientListDto> SelectedPatients { get; set; } = new();
    private bool _patientLoading;
    private string _searchString;
    SfGrid<PatientListDto> _grid = new();

    private void LoadPatients()
    {
        _patientLoading = true;
        foreach (var item in PatientList)
        {
            if (!string.IsNullOrWhiteSpace(item.MobilePhone))
            {
                item.MobilePhone = Method.GetMobileFormat(item.MobilePhone);
                ValidPatients.Add(item);
            }
        }

        _patientLoading = false;
    }

    private async Task SendBulkSms(MouseEventArgs obj)
    {
        var parameters = new DialogParameters {{"SelectedPatients", SelectedPatients}};
        var options = new DialogOptions() {CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true, Position = DialogPosition.Center};
        await DialogService.ShowAsync<BulkSmsValidateDialog>("", parameters, options);
    }

    public async Task GetSelectedRecords(RowSelectEventArgs<PatientListDto> args)
    {
        SelectedPatients = await _grid.GetSelectedRecordsAsync();
        StateHasChanged();
    }

    private async Task GetDeselectedRow(RowDeselectEventArgs<PatientListDto> args)
    {
        SelectedPatients = await _grid.GetSelectedRecordsAsync();
        StateHasChanged();
    }

}