@using Dexterity.Components.Pages.Messaging.Dialogs
@using Services.Features.PatientManagement.Dtos
@using Shared.Helper

<TabTitle Title="Bulk SMS"></TabTitle>
<div class="vertical-space">

    <MudItem>
        <MudStack>
            <MudItem>
                <MudStack Row>
                    <MudItem>
                        <div class="rz-p-sm-12">
                            <RadzenMenu>
                                <RadzenMenuItem Text="Load Group" Icon="home">
                                    <RadzenMenuItem Text="Patients">
                                        <RadzenMenuItem Text="All Patients" Click="LoadPatents"></RadzenMenuItem>
                                    </RadzenMenuItem>
                                </RadzenMenuItem>
                            </RadzenMenu>
                        </div>
                    </MudItem>
                    @if (ValidPatients is { Count: > 0 })
                    {
                        <MudItem>
                            <MudButton Color="MudColor.Primary" Variant="Variant.Filled" OnClick="SendBulkSms">Send Bulk Sms</MudButton>
                        </MudItem>
                    }
                </MudStack>
            </MudItem>
            <MudItem>
                <DexGrid DataSource="@ValidPatients" Loading="_patientLoading" Height="300px">
                    <DexGridColumns>
                        <GridColumn Field="@nameof(PatientListDto.FullName)" HeaderText="Name" Width="120px"></GridColumn>
                        <GridColumn Field="@nameof(PatientListDto.Gender)" HeaderText="Gender" Width="120px"></GridColumn>
                        <GridColumn Field="@nameof(PatientListDto.Mobile)" HeaderText="Mobile" Width="120px"></GridColumn>
                        <GridColumn Field="@nameof(PatientListDto.AddressLine1)" HeaderText="Address" Width="120px"></GridColumn>

                    </DexGridColumns>
                </DexGrid>
            </MudItem>
        </MudStack>
    </MudItem>
</div>


@code {
    [Parameter] public List<PatientListDto> PatientList { get; set; } = new();
    private List<PatientListDto> ValidPatients { get; set; } = new();
    private bool _patientLoading;
    private string _searchString;

    private Func<PatientListDto, bool> QuickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.FullName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;


        return false;
    };

    private void LoadPatents()
    {
        _patientLoading = true;
        foreach (var item in PatientList)
        {
            if (!string.IsNullOrWhiteSpace(item.Mobile))
            {
                item.Mobile = Method.GetMobileFormat(item.Mobile);
                ValidPatients.Add(item);
            }
        }

        _patientLoading = false;
    }

    private async Task SendBulkSms(MouseEventArgs obj)
    {
        var parameters = new DialogParameters { { "ValidPatients", ValidPatients } };
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true, Position = DialogPosition.Center };
        await DialogService.ShowAsync<BulkSmsValidateDialog>("", parameters, options);
    }

}