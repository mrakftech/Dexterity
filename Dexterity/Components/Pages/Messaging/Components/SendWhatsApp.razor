@using Services.Features.PatientManagement.Dtos.Details
<TabTitle Title="WhatsApp"></TabTitle>
<div class="vertical-space">
    <MudStack>
        <MudItem>
            <MudText Color="MudColor.Error" Class="text-bold">@_error</MudText>
        </MudItem>
        <MudItem>
            <PatientAutoComplete PatientList="PatientList" OnChangePatient="ChangePatient"></PatientAutoComplete>
        </MudItem>
        @if (!string.IsNullOrWhiteSpace(_waLink))
        {
            <MudItem md="6">
                <MudButton FullWidth="false"
                           Size="MudSize.Medium"
                           Href="@_waLink"
                           Color="MudColor.Primary"
                           Variant="Variant.Filled"
                           StartIcon="fab fa-whatsapp">Connect Chat</MudButton>
            </MudItem>
        }
        <MudItem>
            @if (!string.IsNullOrWhiteSpace(_mobile))
            {
                <DexLoadingButton Name="Generate Link" Click="SendSmsClick" />
            }

        </MudItem>
    </MudStack>
</div>


@code {
    [Parameter] public List<PatientListDto> PatientList { get; set; } = new();
    private string _waLink = "";
    private string _mobile = "";
    private string _error = "";

    private async Task SendSmsClick()
    {
        var n = Method.GetMobileFormat(_mobile);
        await Task.Delay(2500);
        _waLink = $"https://wa.me/{n}";
        Snackbar.SuccessMessage("WhatsApp link generated.");
    }

    private void ChangePatient(ChangeEventArgs<Guid, PatientListDto> args)
    {
        _error = "";
        var patient = args.ItemData;
        if (patient != null)
        {
            _mobile = patient.MobilePhone;
            if (string.IsNullOrEmpty(_mobile))
            {
                _error = "Mobile number not valid.";
            }
        }
        else
        {
            _mobile = string.Empty;

        }
    }

}