@using Shared.Helper

<MudStack>
    <MudItem>
        <PatientAutoComplete PatientList="PatientList" OnChangePatient="ChangePatient"></PatientAutoComplete>
        
    </MudItem>
    @if (!string.IsNullOrWhiteSpace(_waLink))
    {
        <MudItem md="2">
            
        <MudButton FullWidth="false" Size="MudSize.Medium" Href="@_waLink" Color="MudColor.Primary" Variant="Variant.Filled"  StartIcon="fab fa-whatsapp">Connect Chat</MudButton>
        </MudItem>
    }
    <MudItem>
        @if (!string.IsNullOrWhiteSpace(_mobile))
        {
            <MudButton Disabled="@_processing" OnClick="SendSmsClick" Variant="Variant.Filled" Color="MudColor.Primary" StartIcon="">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1 white-color" Size="MudSize.Small" Indeterminate="true"/>
                    <MudText Class="ms-2 white-color">Processing</MudText>
                }
                else
                {
                    <MudText><i class="fas fa-paper-plane"></i> Generate Link</MudText>
                }
            </MudButton>
        }

    </MudItem>
</MudStack>

@code {
    [Parameter] public List<PatientListResponse> PatientList { get; set; } = new();
    private bool _processing;
    private string _waLink = "";
    private string _mobile = "";

    private async Task SendSmsClick()
    {
        _processing = true;
        var n = Method.GetMobileFormat(_mobile);
        await Task.Delay(2500);
        _waLink = $"https://wa.me/{n}";
        Snackbar.SuccessMessge("WhatsApp link generated.");
        _processing = false;
    }

    private void ChangePatient(PatientListResponse obj)
    {
        if (obj.Id != Guid.Empty)
        {
            _mobile = obj.Mobile;
        }
    }

}