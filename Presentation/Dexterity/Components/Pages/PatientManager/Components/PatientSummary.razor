@using Services.Features.PatientManagement.Dtos.Details
@using Dexterity.Components.Pages.PatientManager.Components.Summary

@if (ApplicationState.GetSelectPatientId() !=Guid.Empty)
{
    if (!_loading)
    {
        <TabTitle Title="Patient Summary" GoBack="GoBackToPatientList" ShowBackButton>
        </TabTitle>
        <MudItem md="12" Class="vertical-space">
            <InnerLayout ShowHeader="false">
                <NavigationItems>
                    <DexMenuItem Text="Details" Icon="fas fa-memo-circle-info" Click="@(() => ClickChangedTab(0))"/>
                    <DexMenuItem Text="Contacts" Icon="fas fa-address-book" Click="@(() => ClickChangedTab(1))"/>
                    <DexMenuItem Text="Medical Summary" Icon="fas fa-receipt" Click="@(() => ClickChangedTab(2))"/>
                    <DexMenuItem Text="Medical History" Icon="fas fa-files-medical"
                                 Click="@(() => ClickChangedTab(3))"/>
                    <DexMenuItem Text="Baseline Details" Icon="fas fa-shield-heart"
                                 Click="@(() => ClickChangedTab(4))"/>
                    <DexMenuItem Text="Visit History" Icon="fas fa-rectangle-history"
                                 Click="@(() => ClickChangedTab(5))"/>
                    <DexMenuItem Text="SMS History" Icon="fas fa-message" Click="@(() => ClickChangedTab(6))"/>
                    <DexMenuItem Text="Patient Tasks" Icon="fas fa-bars-progress" Click="@(() => ClickChangedTab(7))"/>
                </NavigationItems>
                <DexContentTabs>
                    <MudTabs @ref="_tabs">
                        <MudTabPanel Text="">
                            <PatientDetail Patient="Patient"/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <ContactDetail/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <MedicalSummary/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <MedicalHistory/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <Baseline Patient="Patient"/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <VisitHistory/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <PatientSmsHistory/>
                        </MudTabPanel>
                        <MudTabPanel Text="">
                            <PatientTask/>
                        </MudTabPanel>
                    </MudTabs>
                </DexContentTabs>
            </InnerLayout>
        </MudItem>
    }
    else
    {
        <DexProgressBar/>
    }
}
else
{
    <SelectPatientList SelectPatient="SelectPatient"/>
}


@code {
    [Parameter] public EventCallback<int> TabChangeClick { get; set; }
    private PatientSummaryDto Patient { get; set; } = new();
    MudTabs _tabs = new();
    string _tabIndex = "0";
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        await GetPateintSummary(ApplicationState.GetSelectPatientId());
        _tabs.ActivatePanel(_tabIndex);
    }


    private async Task GetPateintSummary(Guid patientId)
    {
        _loading = true;
        var summary = await UnitOfWork.Patient.GetPatientSummary(patientId);
        Patient = summary;
        _loading = false;
    }

    private async Task SelectPatient(Guid patientId)
    {
        await GetPateintSummary(patientId);
        StateHasChanged();
    }

    private void ClickChangedTab(int tabIndex)
    {
        _tabs.ActivatePanel(tabIndex);
    }


    protected async Task ChangeTab(int e)
    {

        await TabChangeClick.InvokeAsync(e);
    }
    
    protected async Task GoBackToPatientList()
    {
        ApplicationState.ClearPatient();
        await TabChangeClick.InvokeAsync(3);
    }
}

