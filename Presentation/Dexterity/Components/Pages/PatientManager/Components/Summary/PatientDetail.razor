@using Services.Features.PatientManagement.Dtos.Family
@using Services.Features.PatientManagement.Dtos.Details
<TabTitle Title="Details"></TabTitle>
@if (ApplicationState.GetSelectPatientId() !=Guid.Empty)
{
    <PatientInfoCard Patient="Patient"/>
    <RadzenRow Gap="2rem" class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack>
                <RadzenFieldset Text="Patient Details">
                    <RadzenStack Gap="1rem">
                        <DexForm Model="Patient">
                            <Fields>
                                <FormItem Field="@nameof(PatientSummaryDto.UniqueNumber)">
                                    <Template>
                                        <DexInputBox Label="Unique Number" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.UniqueNumber"/>
                                        <DexInputBox Label="Phone" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.Mobile"/>
                                        <DexInputBox Label="Address" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.Mobile" IsMultiLine/>
                                        <DexInputBox Label="HCP" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.DefualtHcp"/>
                                        <DexInputBox Label="Registered Date" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.RegistrationDate"/>
                                    </Template>
                                </FormItem>
                            </Fields>
                        </DexForm>
                    </RadzenStack>
                </RadzenFieldset>

                <RadzenFieldset Text="Family Details">
                    <RadzenStack Gap="1rem">
                        <DexForm Model="Patient">
                            <Fields>
                                <FormItem Field="@nameof(PatientSummaryDto.UniqueNumber)">
                                    <Template>
                                        <SfDropDownList TValue="int" Placeholder="e.g. select contact" TItem="FamilyMemberDto"
                                                        DataSource="@Patient.FamilyMembers" Width="400px">
                                            <DropDownListFieldSettings Value="Id" Text="Clinic.Name"/>
                                            <DropDownListEvents TItem="FamilyMemberDto" TValue="int" ValueChange="@ValueChangeFamilyHandler"/>
                                        </SfDropDownList>
                                        <DexInputBox Label="Name" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.NextOfKin"/>
                                        <DexInputBox Label="Relationship" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.Relationship"/>
                                        <DexInputBox Label="Contact" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.KinContact"/>
                                        <DexInputBox Label="Address" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.KinAddress"/>
                                    </Template>
                                </FormItem>
                            </Fields>
                        </DexForm>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack>
                <RadzenFieldset Text="GMS Details">
                    <RadzenStack Gap="1rem">
                        <DexForm Model="Patient">
                            <Fields>
                                <FormItem Field="@nameof(PatientSummaryDto.UniqueNumber)">
                                    <Template>
                                        <DexInputBox Label="Patient Type" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.Type"/>
                                        <DexInputBox Label="GMS Status" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.GmsStatus"/>
                                        <DexInputBox Label="GMS Doctor" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.GmsDoctor"/>
                                        <DexInputBox Label="GMS Number" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.GmsNumber"/>
                                        <DexInputBox Label="GMS Review Date" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.GmsReviewDate"/>
                                        <DexInputBox Label="GMS Distance" IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.GmsDistance"/>
                                    </Template>
                                </FormItem>
                            </Fields>
                        </DexForm>
                    </RadzenStack>
                </RadzenFieldset>
                <RadzenFieldset Text="Hospital Details">
                    <RadzenStack Gap="1rem">
                        <DexForm Model="Patient">
                            <Fields>
                                <FormItem Field="@nameof(PatientSummaryDto.UniqueNumber)">
                                    <Template>
                                        <SfDropDownList TValue="int" Placeholder="e.g. select contact" TItem="PatientHospitalDto"
                                                        DataSource="@Patient.Hospitals" Width="400px">
                                            <DropDownListFieldSettings Value="Id" Text="Clinic.Name"/>
                                            <DropDownListEvents TItem="PatientHospitalDto" TValue="int" ValueChange="@ValueChangeHandler"/>
                                        </SfDropDownList>
                                        <DexInputBox Label="Hospital No." IsFieldReadOnly="true" @bind-FieldDataSource="@Patient.HospitalNo"/>
                                    </Template>
                                </FormItem>
                            </Fields>
                        </DexForm>
                    </RadzenStack>
                </RadzenFieldset>

            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}


@code {
    [Parameter] public PatientSummaryDto Patient { get; set; } = new();

    private void ValueChangeHandler(ChangeEventArgs<int, PatientHospitalDto> obj)
    {
        Patient.HospitalNo = obj.ItemData.Contact;
    }

    private void ValueChangeFamilyHandler(ChangeEventArgs<int, FamilyMemberDto> obj)
    {
        Patient.NextOfKin = obj.ItemData.FirstName;
        Patient.KinAddress = obj.ItemData.Address;
        Patient.KinContact = obj.ItemData.ContactDetail;
        Patient.Relationship = obj.ItemData.RelationshipToPatient;
    }

}