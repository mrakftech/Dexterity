@using Domain.Entities.Settings.Templates
@using Syncfusion.Blazor.RichTextEditor
<MudDialog>
    <DialogContent>
        <DexForm Model="EmailTemplateRequest" OnValidSubmit="SaveEmailTemplate">
            <Fields>
                <FormItem Field="@nameof(EmailTemplate.Name)" LabelText="Template Name"> </FormItem>
                <FormItem Field="@nameof(EmailTemplate.Content)" >
                    <Template>
                        <label class="e-form-label">Content</label>
                        <SfRichTextEditor @bind-Value="@EmailTemplateRequest.Content" Width="550px"/>
                    </Template>
                </FormItem>
            </Fields>
            <Buttons>
                <DexLoadingButton Name="Save" Type="MudButtonType.Submit" Processing="@_processing" Icon="fas fa-floppy-disk"></DexLoadingButton>
            </Buttons>
        </DexForm>

    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public Guid Id { get; set; }
    private EmailTemplate EmailTemplateRequest { get; set; } = new();
    private bool _processing;

    protected override async Task OnInitializedAsync()
    {
        if (Id != Guid.Empty)
        {
            var s = await UnitOfWork.Setting.GetEmailTemplate(Id);
            EmailTemplateRequest = s.Data;
        }
    }

    private async Task SaveEmailTemplate()
    {
        _processing = true;
        var res = await UnitOfWork.Setting.SaveEmailTemplate(Id, EmailTemplateRequest);
        if (res.Succeeded)
        {
            Snackbar.SuccessMessage(res.Messages.First());
            MudDialog.Close();
        }
        else
        {
            Snackbar.FailMessage(res.Messages.First());
        }

        await Task.Delay(1000);
        _processing = false;
    }

}