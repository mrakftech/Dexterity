@using Services.Features.Consultation.Dto
@using Services.Features.Settings.Dtos
<DexDialog>
    <DialogTitle>
        <MudText Align="Align.Center" Style="font-weight: bolder">Begin Consultation</MudText>
    </DialogTitle>
    <Content>
        <MudItem>
            <DexForm Model="ConsultationDto" OnValidSubmit="StartConsultation">
                <Fields>
                    <FormItem Field="@nameof(BeginConsultationDto.PatientName)" IsEnabled="false"
                              LabelText="Patient Name"/>
                    <FormItem Field="@nameof(BeginConsultationDto.DoctorName)" IsEnabled="false" LabelText="HCP"/>
                    <FormItem Field="@nameof(BeginConsultationDto.ConsultationDate)" IsEnabled="false"
                              EditorType="FormEditorType.DateTimePicker" LabelText="Date"/>
                    <FormItem Field="@nameof(BeginConsultationDto.ConsultationClass)" IsEnabled="false"
                              LabelText="Class"/>
                    <FormItem Field="@nameof(BeginConsultationDto.ConsultationType)" IsEnabled="false"
                              LabelText="Type"/>
                    <FormItem Field="@nameof(BeginConsultationDto.ClinicSiteId)" ColumnSpan="1">
                        <Template>
                            <label class="e-form-label">Site:</label>
                            <SfDropDownList TValue="Guid" TItem="ClinicSiteDto" Placeholder="Select Site"
                                            DataSource="@ClinicSites" @bind-Value="@ConsultationDto.ClinicSiteId">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </FormItem>
                </Fields>
                <Buttons>
                    <DexLoadingButton Name="Save" Type="MudButtonType.Submit" Processing="_processing"/>
                </Buttons>
            </DexForm>
        </MudItem>
    </Content>
</DexDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Guid AppointmentId { get; set; }
    private bool _processing;
    private BeginConsultationDto ConsultationDto { get; set; } = new();
    private List<ClinicSiteDto> ClinicSites { get; set; } = new();

    private async Task StartConsultation()
    {
        _processing = true;

        var r = await UnitOfWork.Consultation.BeginConsultation(ConsultationDto);
        if (r.Succeeded)
        {
            var res = await UnitOfWork.WaitingRoom
                .UpdateWaitingAppointment(AppointmentId, AppointmentConstants.WaitingStatus.InConsultation, r.Data);
            if (res.Succeeded)
            {
                Snackbar.SuccessMessage(res.Messages.First());
                MudDialog.Close();
            }
            else
            {
                Snackbar.FailMessage(res.Messages.First());
            }
        }
        else
        {
            Snackbar.FailMessage(r.Messages.First());
        }

        _processing = false;
    }


    protected override async Task OnInitializedAsync()
    {
        await GetClinicSites();
    }

    private async Task GetClinicSites()
    {
        ClinicSites = await UnitOfWork.Setting.GetSitesByClinic(ApplicationState.Auth.CurrentUser.ClinicId);
    }

}