@page "/user-manager"
@using Dexterity.Components.Pages.UserManager.Permission
@using Dexterity.Components.Pages.UserManager.UserType
@using Domain.Entities.Common
@using Dexterity.Components.Pages.UserManager.User
@layout MainLayout

<TopTitleBar Title="User Management"
             Image="modules/users.svg">
</TopTitleBar>
<InnerLayout DrawerWidth="150px" ShowHeader="false">
    <NavigationItems>
        @if (_loading)
        {
            <DexProgressBar/>
        }
        else
        {
            foreach (var (item, index) in _appNavigations.Select((item, index) => (item, index)))
            {
                <DexMenuItem Text="@item.Name" Icon="@item.Icon" Click="@(() => ClickChanged(item.Order, item.Id))"/>
            }
        }

    </NavigationItems>

    <DexContentTabs>
        <MudTabs @ref="_tabs">
            <MudTabPanel Text="">
                <UserList/>
            </MudTabPanel>
            <MudTabPanel Text="">
                <UserTypeList/>
            </MudTabPanel>
            <MudTabPanel Text="">
                <Permissions/>
            </MudTabPanel>
        </MudTabs>
    </DexContentTabs>
</InnerLayout>

@code {
    MudTabs _tabs;
    private List<AppModule> _appNavigations = new();
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        await GetAppNavigations();
        _loading = false;
    }

    private async Task GetAppNavigations()
    {
        _appNavigations = await UnitOfWork.App.GetAppNavigations(ApplicationState.Auth.SelectedModuleId);
    }

    private void ClickChanged(int tabIndex,Guid moduleId)
    {
        ApplicationState.Auth.SelectedModuleId = moduleId;
        _tabs.ActivatePanel(tabIndex);
    }


}